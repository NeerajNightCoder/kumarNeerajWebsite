name: Build, Push, and Deploy to EC2

on:
  push:
    branches:
      - master # or the branch you want to trigger the action

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "14" # Adjust to your Node.js version

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test # Adjust this command according to your test script

  build-and-push:
    runs-on: ubuntu-latest
    needs: test # Specifies dependency on the test job

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/kumarneerajwebsite:v1.0.0 .

      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/kumarneerajwebsite:v1.0.0

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push # Specifies dependency on the build-and-push job

    steps:
      - name: SSH into EC2 and deploy Docker container
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            # Pull the latest Docker image from Docker Hub
            docker pull ${{ secrets.DOCKER_USERNAME }}/kumarneerajwebsite:v1.0.0

            # Stop and remove any existing container with the same name
            docker stop kumarneerajwebsite || true
            docker rm kumarneerajwebsite || true

            # Run the Docker image as a new container
            docker run -d --name kumarneerajwebsite -p 80:80 ${{ secrets.DOCKER_USERNAME }}/kumarneerajwebsite:v1.0.0
